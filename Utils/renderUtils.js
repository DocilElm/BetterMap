export const drawBoxAtBlock = (x, y, z, w, h, r, g, b, a = 1) => {
    GL11.glBlendFunc(770, 771)
    GL11.glEnable(GL11.GL_BLEND)
    GL11.glLineWidth(3)
    GL11.glDisable(GL11.GL_TEXTURE_2D)
    GL11.glDisable(GL11.GL_DEPTH_TEST)
    GL11.glDepthMask(false)
    Tessellator.pushMatrix()

    Tessellator.begin(GL11.GL_LINE_STRIP).colorize(r, g, b, a)

    Tessellator.pos(x + w, y + h, z + w)
    Tessellator.pos(x + w, y + h, z)
    Tessellator.pos(x, y + h, z)
    Tessellator.pos(x, y + h, z + w)
    Tessellator.pos(x + w, y + h, z + w)
    Tessellator.pos(x + w, y, z + w)
    Tessellator.pos(x + w, y, z)
    Tessellator.pos(x, y, z)
    Tessellator.pos(x, y, z + w)
    Tessellator.pos(x, y, z)
    Tessellator.pos(x, y + h, z)
    Tessellator.pos(x, y, z)
    Tessellator.pos(x + w, y, z)
    Tessellator.pos(x + w, y + h, z)
    Tessellator.pos(x + w, y, z)
    Tessellator.pos(x + w, y, z + w)
    Tessellator.pos(x, y, z + w)
    Tessellator.pos(x, y + h, z + w)
    Tessellator.pos(x + w, y + h, z + w)

    Tessellator.draw()

    Tessellator.popMatrix()
    GL11.glEnable(GL11.GL_TEXTURE_2D)
    GL11.glEnable(GL11.GL_DEPTH_TEST)
    GL11.glDepthMask(true)
    GL11.glDisable(GL11.GL_BLEND)
}